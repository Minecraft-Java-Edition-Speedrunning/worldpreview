plugins {
	id 'fabric-loom' version "1.0-SNAPSHOT"
	id 'legacy-looming' version "1.0-SNAPSHOT" // Version must be the same as fabric-loom's
	id 'maven-publish'
	id 'org.ajoberstar.grgit' version '4.1.0'
}

def getVersionMetadata() {
	// CI builds version numbers
	def build_id = System.getenv("RELEASE_NUMBER")
	if (build_id != null) {
		return build_id + ".0.0"
	}

	// Development builds
	if (grgit == null) {
		return "dev"
	}

	// Named development builds
	def id = grgit.head().abbreviatedId
	if (!grgit.status().clean) {
		id += "-dirty"
	}

	return "rev.${id}"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = "${project.mod_id}-${project.minecraft_version}"
version = "${getVersionMetadata()}"
group = project.maven_group

repositories {
	// Fixed LWJGL on Linux
	maven {
		name = 'Babric'
		url = 'https://maven.glass-launcher.net/babric'
	}
}

loom {
	setIntermediaryUrl('https://repo.legacyfabric.net/repository/legacyfabric/net/legacyfabric/intermediary/%1$s/intermediary-%1$s-v2.jar');
	
	// Only needed for versions not available from vanilla launcher by default.
	// customMinecraftManifest.set("https://meta.legacyfabric.net/v2/manifest/${minecraft_version}")

	// Required by 1.7.x
	// runs {
	// 	client {
	// 		programArgs "--userProperties", "{}"
	// 	}
	// }
}

def lwjgl2 = !project.minecraft_version.startsWith("1.13")
def currentOs = System.getProperty("os.name").toLowerCase(Locale.ENGLISH)

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.legacyfabric:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	compileOnlyApi files("libs/atum-1.1.3+1.8.9.jar")
	if (lwjgl2) {
		if (currentOs.contains("mac")) {
			implementation 'org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209'
			implementation 'org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209'
			implementation 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-nightly-20150209'
		} else if (currentOs.contains("linux")) {
			implementation 'org.lwjgl.lwjgl:lwjgl_util:2.9.4-babric.1'
			implementation 'org.lwjgl.lwjgl:lwjgl:2.9.4-babric.1'
			implementation 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-babric.1'
		}
	}
}

if (lwjgl2) {
	if (currentOs.contains("mac")) {
		configurations.all {
			resolutionStrategy {
				dependencySubstitution {
					substitute module('org.lwjgl.lwjgl:lwjgl_util:2.9.2-nightly-201408222') with module('org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209')
					substitute module('org.lwjgl.lwjgl:lwjgl:2.9.2-nightly-201408222') with module('org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209')
				}
				force 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-nightly-20150209'
			}
		}
	} else if (currentOs.contains("linux")) {
		configurations.all {
			resolutionStrategy {
				dependencySubstitution {
					substitute(module('org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209')) using module('org.lwjgl.lwjgl:lwjgl_util:2.9.4-babric.1')
					substitute module('org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209') using module('org.lwjgl.lwjgl:lwjgl:2.9.4-babric.1')
				}
				force 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-babric.1'
			}
		}
	}
}

processResources {
	inputs.property "mod_id", project.mod_id
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "mod_id": project.mod_id, "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	if (JavaVersion.current().isJava9Compatible()) it.options.release = 8
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
